From eeefda28bbc6b555c7836f32e641fb50849c373e Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Tue, 17 May 2016 11:46:33 -0400
Subject: [PATCH] fix dbus failure

In smart, it invoke dbus at initial time, here is the sample:
>>> import dbus
>>> bus = dbus.SystemBus()
>>> hal_object = bus.get_object('org.freedesktop.Hal', '/org/freedesktop/Hal/Manager')
It triger a failure that 'The name org.freedesktop.Hal was not provided by any
.service files', and the failure is ignored.

In anaconda, it invoke dbus in network spokes:
>>> from dbus.mainloop.glib import DBusGMainLoop
>>> DBusGMainLoop(set_as_default=True)
>>> import dbus
>>> import dbus.service
>>> bus = dbus.SystemBus()
>>> server = dbus.service.Object(bus, "/org/freedesktop/NetworkManager/SecretAgent")

Anaconda also invokes smart, if smart initialization is earlier than network spokes, there is
a failure in network spokes.
...
| RuntimeError: To make asynchronous calls, receive signals or export objects,
D-Bus connections must be attached to a main loop by passing mainloop=... to
the constructor or calling dbus.set_default_main_loop(...)
...

Both of smart and anaconda use shared SystemBus, tweak smart's SystemBus
with 'private = True' could fix the issue.

Upstream-Status: Inappropriate [wrlinux specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 smart/media.py | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/smart/media.py b/smart/media.py
index 21a21a9..f889c4b 100644
--- a/smart/media.py
+++ b/smart/media.py
@@ -376,7 +376,7 @@ def discoverHalVolumeMedias():
         olderr = sys.stderr
         sys.stderr = StringIO.StringIO()
         try:
-            bus = dbus.SystemBus()
+            bus = dbus.SystemBus(private=True)
             hal_object = bus.get_object('org.freedesktop.Hal',
                                         '/org/freedesktop/Hal/Manager')
             hal_manager = dbus.Interface(hal_object, 'org.freedesktop.Hal.Manager')
@@ -411,7 +411,7 @@ def discoverDeviceKitDisksMedias():
         olderr = sys.stderr
         sys.stderr = StringIO.StringIO()
         try:
-            bus = dbus.SystemBus()
+            bus = dbus.SystemBus(private=True)
             dk_object = bus.get_object('org.freedesktop.DeviceKit.Disks',
                                        '/org/freedesktop/DeviceKit/Disks')
             dk_interface = dbus.Interface(dk_object, 'org.freedesktop.DeviceKit.Disks')
-- 
2.8.1

