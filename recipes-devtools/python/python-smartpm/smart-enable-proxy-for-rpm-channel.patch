Enable smart rpm channel proxy support.

Upstream-Status: Pending

Signed-off-by: Kai Kang <kai.kang@windriver.com>
---
diff -Nru smart-1.4.1.orig/smart/channels/rpm_md.py smart-1.4.1/smart/channels/rpm_md.py
--- smart-1.4.1.orig/smart/channels/rpm_md.py	2014-07-21 15:22:52.714434721 +0800
+++ smart-1.4.1/smart/channels/rpm_md.py	2014-07-22 17:37:01.781008665 +0800
@@ -60,13 +60,17 @@
     _mirrorlist = ""
     _fingerprint = None
 
-    def __init__(self, baseurl, mirrorlist=None, fingerprint=None, *args):
+    def __init__(self, baseurl, mirrorlist=None, fingerprint=None, proxy=None, proxy_username=None, proxy_password=None, *args):
         super(RPMMetaDataChannel, self).__init__(*args)
         self._baseurl = baseurl
         self._mirrorlist = mirrorlist
         if fingerprint:
             self._fingerprint = "".join(fingerprint.split())
 
+        self._proxy = proxy
+        self._proxy_username = proxy_username
+        self._proxy_password = proxy_password
+
     def getCacheCompareURLs(self):
         return [posixpath.join(self._baseurl, "repodata/repomd.xml")]
 
@@ -172,7 +176,10 @@
 
         if self._mirrorlist:
             mirrorlist = self._mirrorlist
-            item = fetcher.enqueue(mirrorlist)
+            item = fetcher.enqueue(mirrorlist,
+                                   proxy=self._proxy,
+                                   proxy_username=self._proxy_username,
+                                   proxy_password=self._proxy_password)
             fetcher.run(progress=progress)
 
             if item.getStatus() is FAILED:
@@ -197,9 +204,15 @@
             except Error:
                 pass
         
-        item = fetcher.enqueue(repomd)
+        item = fetcher.enqueue(repomd,
+                               proxy=self._proxy,
+                               proxy_username=self._proxy_username,
+                               proxy_password=self._proxy_password)
         if self._fingerprint:
-            gpgitem = fetcher.enqueue(reposig)
+            gpgitem = fetcher.enqueue(reposig,
+                                      proxy=self._proxy,
+                                      proxy_username=self._proxy_username,
+                                      proxy_password=self._proxy_password)
         fetcher.run(progress=progress)
 
         if item.getStatus() is FAILED:
@@ -268,7 +281,10 @@
                                uncomp_sha=primary.get("uncomp_sha"),
                                sha256=primary.get("sha256"),
                                uncomp_sha256=primary.get("uncomp_sha256"),
-                               uncomp=True)
+                               uncomp=True,
+                               proxy=self._proxy,
+                               proxy_username=self._proxy_username,
+                               proxy_password=self._proxy_password)
         flitem = fetcher.enqueue(filelists["url"],
                                  md5=filelists.get("md5"),
                                  uncomp_md5=filelists.get("uncomp_md5"),
@@ -276,14 +292,20 @@
                                  uncomp_sha=filelists.get("uncomp_sha"),
                                  sha256=filelists.get("sha256"),
                                  uncomp_sha256=filelists.get("uncomp_sha256"),
-                                 uncomp=True)
+                                 uncomp=True,
+                                 proxy=self._proxy,
+                                 proxy_username=self._proxy_username,
+                                 proxy_password=self._proxy_password)
         if "updateinfo" in info:
             uiitem = fetcher.enqueue(info["updateinfo"]["url"],
                                    md5=info["updateinfo"].get("md5"),
                                    uncomp_md5=info["updateinfo"].get("uncomp_md5"),
                                    sha=info["updateinfo"].get("sha"),
                                    uncomp_sha=info["updateinfo"].get("uncomp_sha"),
-                                   uncomp=True)
+                                   uncomp=True,
+                                   proxy=self._proxy,
+                                   proxy_username=self._proxy_username,
+                                   proxy_password=self._proxy_password)
         fetcher.run(progress=progress)
  
         if item.getStatus() == SUCCEEDED and flitem.getStatus() == SUCCEEDED:
@@ -347,6 +369,9 @@
     return RPMMetaDataChannel(data["baseurl"],
                               data["mirrorlist"],
                               data["fingerprint"],
+                              data.get("proxy"),
+                              data.get("proxy-username"),
+                              data.get("proxy-password"),
                               data["type"],
                               alias,
                               data["name"],
diff -Nru smart-1.4.1.orig/smart/channels/rpm_md_info.py smart-1.4.1/smart/channels/rpm_md_info.py
--- smart-1.4.1.orig/smart/channels/rpm_md_info.py	2014-07-21 15:22:52.714434721 +0800
+++ smart-1.4.1/smart/channels/rpm_md_info.py	2014-07-21 17:46:48.026670052 +0800
@@ -34,7 +34,13 @@
           ("mirrorlist", _("Mirror list URL"), str, "",
            _("URL which provides list of mirrors for baseurl")),
           ("fingerprint", _("Fingerprint"), str, "",
-           _("GPG fingerprint of key signing the channel."))]
+           _("GPG fingerprint of key signing the channel.")),
+          ("proxy", _("Proxy"), str, '',
+           _("Proxy used by the channel.")),
+          ("proxy-username", _("Proxy user name"), str, '',
+           _("Proxy user name.")),
+          ("proxy-password", _("Proxy password"), str, '',
+           _("Proxy password of the user."))]
 
 def detectLocalChannels(path, media):
     import os
diff -Nru smart-1.4.1.orig/smart/fetcher.py smart-1.4.1/smart/fetcher.py
--- smart-1.4.1.orig/smart/fetcher.py	2014-07-21 15:22:52.718434721 +0800
+++ smart-1.4.1/smart/fetcher.py	2014-07-22 09:38:44.004226588 +0800
@@ -538,7 +538,8 @@
         # - uncomp_{md5,sha,sha256,size}: uncompressed equivalents
         #
         for kind in ("md5", "sha", "sha256",
-                     "uncomp_md5", "uncomp_sha", "uncomp_sha256"):
+                     "uncomp_md5", "uncomp_sha", "uncomp_sha256",
+                     "proxy", "proxy_username", "proxy_password"):
             value = info.get(kind)
             if value:
                 info[kind] = value.lower()
@@ -1728,6 +1729,13 @@
                         handle.setopt(pycurl.HTTPHEADER, ["Pragma:"])
                         handle.setopt(pycurl.USERAGENT, "smart/" + VERSION)
                         handle.setopt(pycurl.FAILONERROR, 1)
+
+                        if item.getInfo('proxy'):
+                            handle.setopt(pycurl.PROXY, item.getInfo('proxy'))
+                            username=item.getInfo('proxy_username')
+                            if username:
+                                handle.setopt(pycurl.PROXYUSERPWD,
+                                              '%s:%s' % (username, item.getInfo('proxy_password', '')))
 
                         # check if we have a valid local file and use I-M-S
                         if fetcher.validate(item, localpath):
