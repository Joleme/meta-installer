meat-installer
============
The installation program is anaconda installer which
ported from fedora 26.
(https://fedoraproject.org/wiki/Anaconda)

This layer provides a target-based installer for Yocto.
It requires most of the layers that Yocto provides.

There are two builds required, one is target build,
another is host build.

The image/packages of target build is installed on the target hard
disk as user requirements.

The image of host build is to run a installer program (anaconda)
and install image/packages of target build to hard disk.

Dependencies
------------
This layer depends on the Yocto of bitbake, oe-core,
meta-filesystems, meta-gnome, meta-python, meta-oe
meta-networking, and meta-initramfs layer.

URI: git://github.com/openembedded/openembedded-core.git
branch: master
revision: HEAD

URI: git://github.com/openembedded/bitbake.git
branch: master
revision: HEAD

URI: git://github.com/openembedded/meta-openembedded.git
branch: master
revision: HEAD


Maintenance
-----------
Maintainers: Hongxu Jia <jiahongxujia@163.com> | <hongxu.jia@windriver.com>
             Robert Yang <liezhi.yang@windriver.com>

Contributing
-----------
TODO

Limitation
-----------
1) Since OE use grub-efi to generate live image, the compatible host
   is i.86|x86_64
   (Set MACHINE = "qemux86-64|qemux86" in default build)

2) The target installer based on fedora 26, so it requires:
   - systemd as init manager
   - python3
   - dnf2/rpm4 pakcage management
   - gobject-introspection which requires qemu-usermode
     in MACHINE_FEATURES

Building the target installer
-----------
1. Summary
   The target installer is enabled by including this layer.
   There are two images in target installer, one is target
   image which to be installed to target, another is installer image
   which to do the installation.

   A target image requires specific components to be compatible with
   the installer. To install these components set
   DISTRO_FEATURES_append = " installer-support in local.conf

   For installer image, you are not supposed to change the 'DISTRO'
   setting in target build directory. It may work, but it's not
   recommended. Instead we should recommend the user run a
   oe-init-build-env and create a new build directory for the installer.
   Set DISTRO = 'installer' in local.conf file.

   There are two kinds of installer builds: "Image Based Install" and
   "Package Based Install". The former is to install a prebuilt image,
   the latter is to install RPM packages.

   For Image Based Install, set INSTALLER_TARGET_BUILD =
   '<target-build-image>' in local.conf to specify an .ext2, .ext3,
   or ext4 image file, then the installer will copy this image to the
   target.

   For Package Based Install,  set INSTALLER_TARGET_BUILD =
   '<target-build-topdir>' to specify the path to target build directory
   that will supply RPMs, and INSTALLER_TARGET_IMAGE = '<target-image-pn>'
   to specify the image recipe name, then the installer will install its
   RPMs to the target;

2. Two main use cases
   2.1 Installer image with ext2, ext3 or ext4 image from the target
       build to be copied to local disk.

   2.2 Installer image with RPMs from the target build to be installed
       to local disk.

   Note: Each option requires two builds, one is for the target build,
         the other one is for the installer itself. The build and installer
         board (BSP) configuration should be the same.

3. Examples for the use cases
   The following example is to install a target image core-image-minimal
   by host image core-image-install.

   3.1 Image Based Install
       3.1.1 Clone away

           $ mkdir <installer-project>
           $ cd <installer-project>
           $ git clone git://git.openembedded.org/meta-openembedded
           $ git clone git://git.openembedded.org/openembedded-core oe-core
           $ cd oe-core
           $ git clone git://git.openembedded.org/bitbake

       3.1.2 Prepare target build

           $ . <installer-project>/oe-core/oe-init-build-env <target_build>

           The build requires 'installer-support' in DISTRO_FEATURES to
           help installation. It also requires RPM packages and systemd
           init manager. Edit conf/local.conf to use:
           $ echo 'DISTRO_FEATURES_append = " installer-support"' >> conf/local.conf
           $ echo 'PACKAGE_CLASSES = "package_rpm"' >> conf/local.conf
           $ echo 'VIRTUAL-RUNTIME_init_manager = "systemd"' >> conf/local.conf
           $ echo 'DISTRO_FEATURES_append = " systemd"' >> conf/local.conf

           Edit conf/bblayers.conf to include other layers
           BBLAYERS ?= " \
               <installer-project>/oe-core/meta \
               <installer-project>/meta-openembedded/meta-python \
               <installer-project>/meta-openembedded/meta-gnome \
               <installer-project>/meta-openembedded/meta-filesystems \
               <installer-project>/meta-openembedded/meta-oe \
               <installer-project>/meta-openembedded/meta-networking \
               <installer-project>/meta-openembedded/meta-initramfs \
               <installer-project>/meta-installer \
           "

       3.1.3 Build target image in <target_build>.

           $ bitbake core-image-minimal

       3.1.4 Prepare installer build.
           $ . <installer-project>/oe-core/oe-init-build-env <installer_build>

           The build requires DISTRO = "installer", location of target image.
           Edit conf/local.conf to use:
           $ echo 'PACKAGE_CLASSES = "package_rpm"' >> conf/local.conf
           $ echo 'DISTRO = "installer"' >> conf/local.conf
           $ echo 'INSTALLER_TARGET_BUILD = "<target_build>/tmp-glibc/deploy/images/qemux86/core-image-minimal-qemux86.ext4"' >> conf/local.conf

           Edit conf/bblayers.conf to include other layers
           BBLAYERS ?= " \
               <installer-project>/oe-core/meta \
               <installer-project>/meta-openembedded/meta-python \
               <installer-project>/meta-openembedded/meta-gnome \
               <installer-project>/meta-openembedded/meta-filesystems \
               <installer-project>/meta-openembedded/meta-oe \
               <installer-project>/meta-openembedded/meta-networking \
               <installer-project>/meta-openembedded/meta-initramfs \
               <installer-project>/meta-installer \
           "

       3.1.5 Build installer image in installer_build.

           $ bitbake core-image-installer

   3.2 Package Based Install
       3.2.1 Clone away
             The same with 3.1.1

       3.2.2 Prepare target build
             The same with 3.1.2

       3.2.3 Build target image in <target_build>.
             The same with 3.1.3

       3.2.4 Prepare installer build.
           $ . <installer-project>/oe-core/oe-init-build-env <installer_build>

           The build requires DISTRO = "installer", location of target build
           and recipe name of target image.
           Edit conf/local.conf to use:
           $ echo 'PACKAGE_CLASSES = "package_rpm"' >> conf/local.conf
           $ echo 'DISTRO = "installer"' >> conf/local.conf
           $ echo 'INSTALLER_TARGET_BUILD = "<target_build>"' >> conf/local.conf
           $ echo 'INSTALLER_TARGET_IMAGE = "core-image-minimal"' >> conf/local.conf

           Edit conf/bblayers.conf to include other layers
           BBLAYERS ?= " \
               <installer-project>/oe-core/meta \
               <installer-project>/meta-openembedded/meta-python \
               <installer-project>/meta-openembedded/meta-gnome \
               <installer-project>/meta-openembedded/meta-filesystems \
               <installer-project>/meta-openembedded/meta-oe \
               <installer-project>/meta-openembedded/meta-networking \
               <installer-project>/meta-openembedded/meta-initramfs \
               <installer-project>/meta-installer \
           "

       3.2.4 Build installer image in installer_build.
             The same with 3.1.4

