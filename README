wr-installer
============

This layer provides a target-based installer for Wind River Linux.  It
requires most of the layers that Wind River Linux provides.


Dependencies
------------
This layer depends on the Wind River Linux version of bitbake, oe-core,
wrlinux layer, wr-base layer and wrlcompat layer.


Maintenance
-----------
This layer is maintained by Wind River Systems, Inc.
Contact <support@windriver.com> or your support representative for more
information on submitting changes.


Building the target installer
-----------------------------
The target installer is enabled by passing
"--enable-target-installer=yes" to configure.  A second option
"--with-installer-target-build=<path>" is used to specify the path to
the build directory that will supply rpms and kernel to be installed on
the target.  If the path is an .ext2, .ext3, or ext4 image file, then
the installer will copy this image to the target after the disk has been
partitioned and formatted.  If a target-build is not specified, the
installer project will be used as the target-build.

For example:
configure --enable-board=qemux86 \
          --enable-kernel=standard \
          --enable-rootfs=glibc_small \
          --enable-bootimage=iso \
          --enable-target-installer=yes \
          --with-installer-target-build=/home/user/my_project

make fs

The resulting installer will contain the packages from "my_project", and
the default system configuration will match the settings in "my_project".

Note: the board configuration should be the same in both project.

Note: The installer program is incompatible with selinux and this
combination has been disabled.

Note: Please make sure that you have more memory than the disk size of ISO when
      you do the installs, for example, if the ISO is 1G, then more than 1G
      memory is required, usually, 2G is preferred.

The installer script can read answers from /etc/installer.conf to help
speed up the installation process.  To add one to the installer image
requires the user to either copy the file to their project directory and/or
configure their local.conf file.

    cp <path>/installer.conf <installer_build_dir>/bitbake_build/conf/.

    or

    edit <installer_build_dir>/bitbake_build/conf/local.conf
    WRL_INSTALLER_CONF = "/my/installer.conf"

The installer can support the kickstart installs, you can use the ks
file from /root/anaconda-ks.cfg after the installation and edit it for
later installs, you can specific the ks file by either of the following
3 ways:
  - Set KICKSTART_FILE in the conf file (e.g.: local.conf)
  - Put it to <installer-target-build>/anaconda-ks.cfg
  - Put it to <installer-build>/anaconda-ks.cfg

Then the build will take it and start the kickstart installs by default
when you start the target.


License
-------
Copyright (C) 2013-2014 Wind River Systems, Inc.

The right to copy, distribute or otherwise make use of this software may
be licensed only pursuant to the terms of an applicable Wind River license
agreement.  No license to Wind River intellectual properly rights is granted
herein.  All rights not licensed by Wind River are reserved by Wind River.

Source code included in the tree for individual recipes is under the LICENSE
stated in each recipe (.bb file) unless otherwise stated.

