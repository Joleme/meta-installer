From b64761bfcd21339eda13a77e1c35ba3c967a273d Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Tue, 24 Mar 2015 18:13:17 +0800
Subject: [PATCH] text.py: add textbox to ProgressWindow

Add two textbox to ProgressWindow, there are totally three,
the first one is used to display topic, the second one to display
subtopic and subpercent, the laster one to display percent.

Upstream-Status: inappropriate [WR specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 pyanaconda/text.py | 36 ++++++++++++++++++++++++------------
 1 file changed, 24 insertions(+), 12 deletions(-)

diff --git a/pyanaconda/text.py b/pyanaconda/text.py
index 6396f25..aecd048 100644
--- a/pyanaconda/text.py
+++ b/pyanaconda/text.py
@@ -102,15 +102,22 @@ class OkCancelWindow:
 
 class ProgressWindow:
     def pop(self):
-	self.screen.popWindow()
-	self.screen.refresh()
+        self.screen.popWindow()
+        self.screen.refresh()
         del self.scale
         self.scale = None
 
     def pulse(self):
         pass
 
-    def set(self, amount):
+    def set(self, amount, topic = None, subtopic = None, percent = None):
+        if topic:
+            self.t_topic.setText(topic)
+        if subtopic:
+            self.t_subtopic.setText(subtopic)
+        if percent:
+            self.t_percent.setText(percent)
+
         self.scale.set(int(float(amount) * self.multiplier))
         self.screen.refresh()
 
@@ -121,21 +128,26 @@ class ProgressWindow:
         self.multiplier = 1
         if total == 1.0:
             self.multiplier = 100
-	self.screen = screen
-	width = 55
-	if (len(text) > width): width = len(text)
+        self.screen = screen
+        width = 55
+        self.t_subtopic = TextboxReflowed(width, " ")
+        self.t_percent = TextboxReflowed(width, " ")
 
-	t = TextboxReflowed(width, text)
+        if (len(text) > width): width = len(text)
+
+        self.t_topic = TextboxReflowed(width, text)
 
-	g = GridForm(self.screen, title, 1, 2)
-	g.add(t, 0, 0, (0, 0, 0, 1), anchorLeft=1)
+        g = GridForm(self.screen, title, 1, 4)
+        g.add(self.t_topic, 0, 0, (0, 0, 0, 1), anchorLeft=1)
+        g.add(self.t_subtopic, 0, 1, (0, 0, 0, 1), anchorLeft=1)
+        g.add(self.t_percent, 0, 2, (0, 0, 0, 1), anchorLeft=1)
 
         self.scale = Scale(int(width), int(float(total) * self.multiplier))
         if not pulse:
-            g.add(self.scale, 0, 1)
+            g.add(self.scale, 0, 3)
                 
-	g.draw()
-	self.screen.refresh()
+        g.draw()
+        self.screen.refresh()
 
 class LuksPassphraseWindow:
     def __init__(self, screen, passphrase = "", preexist = False):
-- 
1.9.1

