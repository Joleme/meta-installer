From 73192c5c06b0f174472b74e7fb4ce5abf7b0c990 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Mon, 4 Jul 2016 04:36:09 -0400
Subject: [PATCH 34/62] support timezone setting

- If selected timezone does not exist in target,
  try to make a copy from host

- Drop unused /etc/adjtime (redhat specific),
  use /etc/localtime to replace (oe-core specific).

Upstream-Status: Inappropriate [wrlinux specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 pyanaconda/timezone.py | 25 +++++++------------------
 1 file changed, 7 insertions(+), 18 deletions(-)

diff --git a/pyanaconda/timezone.py b/pyanaconda/timezone.py
index 956c33e..a33d3e6 100644
--- a/pyanaconda/timezone.py
+++ b/pyanaconda/timezone.py
@@ -25,6 +25,7 @@ configuration, valid timezones recognition etc.
 """
 
 import os
+import shutil
 import pytz
 import langtable
 from collections import OrderedDict
@@ -103,6 +104,9 @@ def write_timezone_config(timezone, root):
     relative_path = os.path.normpath("../" + tz_file)
     link_path = os.path.normpath(root + "/etc/localtime")
 
+    if not os.access(rooted_tz_file, os.R_OK) and os.access(tz_file, os.R_OK):
+        shutil.copyfile(tz_file, rooted_tz_file)
+
     if not os.access(rooted_tz_file, os.R_OK):
         log.error("Timezone to be linked (%s) doesn't exist", rooted_tz_file)
     else:
@@ -118,28 +122,13 @@ def write_timezone_config(timezone, root):
             log.error("Error when symlinking timezone (from %s): %s",
                       rooted_tz_file, oserr.strerror)
 
+    with open(root + "/etc/timezone", "w") as fobj:
+        fobj.write('%s\n' % timezone.timezone)
+
     if arch.isS390():
         # there is no HW clock on s390(x)
         return
 
-    try:
-        fobj = open(os.path.normpath(root + "/etc/adjtime"), "r")
-        lines = fobj.readlines()
-        fobj.close()
-    except IOError:
-        lines = [ "0.0 0 0.0\n", "0\n" ]
-
-    try:
-        with open(os.path.normpath(root + "/etc/adjtime"), "w") as fobj:
-            fobj.write(lines[0])
-            fobj.write(lines[1])
-            if timezone.isUtc:
-                fobj.write("UTC\n")
-            else:
-                fobj.write("LOCAL\n")
-    except IOError as ioerr:
-        msg = "Error while writing /etc/adjtime file: %s" % ioerr.strerror
-        raise TimezoneConfigError(msg)
 
 def save_hw_clock(timezone):
     """
-- 
2.7.4

