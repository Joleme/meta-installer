From d95e68d74cd3d4369e0dcdaae32a44fb4ec7c573 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Fri, 31 Mar 2017 13:26:58 +0800
Subject: [PATCH 08/62] dynamic detect workable locale

Previously we hardcoded to only support en-gb and en-us,

Now we dynamic detect workable locale.

Upstream-Status: Inappropriate [wrlinux specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 pyanaconda/localization.py                          | 18 +++++++++++++++++-
 pyanaconda/ui/gui/spokes/lib/lang_locale_handler.py |  3 +++
 pyanaconda/ui/tui/spokes/langsupport.py             |  2 +-
 3 files changed, 21 insertions(+), 2 deletions(-)

diff --git a/pyanaconda/localization.py b/pyanaconda/localization.py
index 51a3e4f..229cb99 100644
--- a/pyanaconda/localization.py
+++ b/pyanaconda/localization.py
@@ -29,7 +29,7 @@ import glob
 from collections import namedtuple
 
 from pyanaconda import constants
-from pyanaconda.iutil import upcase_first_letter, setenv, execWithRedirect
+from pyanaconda.iutil import upcase_first_letter, setenv, execWithRedirect, execReadlines
 
 import logging
 log = logging.getLogger("anaconda")
@@ -738,3 +738,19 @@ def setup_locale_environment(locale=None, text_mode=False, prefer_environment=Fa
     for varname in ("LANGUAGE", "LC_ALL", "LC_MESSAGES"):
         if varname in os.environ:
             del os.environ[varname]
+
+_all_locales = []
+def list_all_locales():
+    global _all_locales
+
+    if _all_locales == []:
+        for lang in execReadlines("locale", ["-a"]):
+            parts= parse_langcode(lang)
+            locales = langtable.list_locales(languageId=parts["language"],
+                                             territoryId=parts.get("territory", ""),
+                                             scriptId=parts.get("script", ""))
+            _all_locales += locales
+
+        log.info("all locales: %s" % _all_locales)
+
+    return _all_locales
diff --git a/pyanaconda/ui/gui/spokes/lib/lang_locale_handler.py b/pyanaconda/ui/gui/spokes/lib/lang_locale_handler.py
index 1b1f180..8c3adf5 100644
--- a/pyanaconda/ui/gui/spokes/lib/lang_locale_handler.py
+++ b/pyanaconda/ui/gui/spokes/lib/lang_locale_handler.py
@@ -159,6 +159,9 @@ class LangLocaleHandler(object):
         locales = localization.get_language_locales(lang)
         locales = self._filter_locales(lang, locales)
         for locale in locales:
+            if locale not in localization.list_all_locales():
+                continue
+
             self._add_locale(self._localeStore,
                              localization.get_native_name(locale),
                              locale)
diff --git a/pyanaconda/ui/tui/spokes/langsupport.py b/pyanaconda/ui/tui/spokes/langsupport.py
index d569858..fbf758f 100644
--- a/pyanaconda/ui/tui/spokes/langsupport.py
+++ b/pyanaconda/ui/tui/spokes/langsupport.py
@@ -81,7 +81,7 @@ class LangSpoke(FirstbootSpokeMixIn, NormalTUISpoke):
 
         if args:
             self._window += [TextWidget(_("Available locales"))]
-            displayed = [TextWidget(localization.get_english_name(z)) for z in args]
+            displayed = [TextWidget(localization.get_english_name(z)) for z in args if z in localization.list_all_locales()]
         else:
             self._window += [TextWidget(_("Available languages"))]
             displayed = [TextWidget(z) for z in self._langs]
-- 
2.7.4

