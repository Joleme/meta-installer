From d6da51c9f16ba321826899857c6da380dfb13adc Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Thu, 21 Apr 2016 21:36:39 -0400
Subject: [PATCH 13/62] improve thread monitor

Set thread name, it is easy to monitor thread status by ps

Upstream-Status: Inappropriate [wrlinux specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 pyanaconda/threads.py | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/pyanaconda/threads.py b/pyanaconda/threads.py
index eea1da6..0867e7b 100644
--- a/pyanaconda/threads.py
+++ b/pyanaconda/threads.py
@@ -23,6 +23,8 @@ import logging
 log = logging.getLogger("anaconda")
 
 import threading
+import prctl
+from functools import wraps
 
 _WORKER_THREAD_PREFIX = "AnaWorkerThread"
 
@@ -199,6 +201,14 @@ class AnacondaThread(threading.Thread):
     _prefix_thread_counts = dict()
 
     def __init__(self, *args, **kwargs):
+        def set_thread_name(target):
+            @wraps(target)
+            def inner_target(*args, **kwargs):
+                prctl.set_name(self.name)
+                return target(*args, **kwargs)
+
+            return inner_target
+
         # if neither name nor prefix is given, use the worker prefix
         if "name" not in kwargs and "prefix" not in kwargs:
             kwargs["prefix"] = _WORKER_THREAD_PREFIX
@@ -210,6 +220,9 @@ class AnacondaThread(threading.Thread):
             self._prefix_thread_counts[prefix] = thread_num
             kwargs["name"] = prefix + str(thread_num)
 
+        if "target" in kwargs:
+            kwargs["target"] =  set_thread_name(kwargs["target"])
+
         if "fatal" in kwargs:
             self._fatal = kwargs.pop("fatal")
         else:
-- 
2.7.4

